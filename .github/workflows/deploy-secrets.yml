name: Deploy secrets

on:
  workflow_dispatch:
    inputs:
      restart-containers:
        description: 'Restarting containers to reload secrets'
        required: false
        default: 'true'
      vm_ip:
        description: 'IP address of the VM'
        required: false
        default: ""

env:
  REPO_DIR_PATH: /home/luddite478/blog

jobs:
  deploy-secrets:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [server, haproxy, minio, mongodb]
    environment: ${{ matrix.environment }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}

    - name: Read and Substitute Environment Variables
      run: |
        pwd
        ls -la ${{ matrix.environment }}
        # Read the example env file and substitute values
        echo '${{ toJSON(secrets) }}' > secrets.json
        cat secrets.json

        echo "Reading and substituting environment variables..."
        cat ${{ matrix.environment }}/.${{ matrix.environment }}.example.env

        while IFS='=' read -r key value || [ -n "$key" ]; do
          # Remove leading and trailing spaces
          key=$(echo $key | xargs)
          
          # Check if the key is not empty and doesn't start with a comment
          if [[ ! -z "$key" && ! $key =~ ^# ]]; then
            # Get the corresponding secret value from the JSON file
            secret_value=$(jq -r --arg key "$key" '.[$key]' secrets.json)
            
            # Debug output
            echo "Processing key: $key"
            echo "Original value: $value"
            echo "Secret value: $secret_value"
            
            # If the secret exists, substitute it in the .env file
            if [[ ! -z "$secret_value" && "$secret_value" != "null" ]]; then
              echo "$key=$secret_value" >> ${{ matrix.environment }}/.${{ matrix.environment }}.env
            else
              echo "$key=$value" >> ${{ matrix.environment }}/.${{ matrix.environment }}.env
            fi
          fi
        done < ${{ matrix.environment }}/.${{ matrix.environment }}.example.env

        echo "Resulting .${{ matrix.environment }}.env file:"
        cat ${{ matrix.environment }}/.${{ matrix.environment }}.env

    - name: Upload .env to server
      run: |
        VM_IP=${{ inputs.vm_ip || secrets.HOST_IP }}
        scp -o StrictHostKeyChecking=no ${{ matrix.environment }}/.${{ matrix.environment }}.env ${{ secrets.SSH_USER }}@$VM_IP:${{ env.REPO_DIR_PATH }}/${{ matrix.environment }}/.${{ matrix.environment }}.env

  restart-containers:
    runs-on: ubuntu-latest
    needs: deploy-secrets
    if: inputs.restart-containers == 'true'
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}
        
    - name: Stop and rerun Docker Compose
      run: |
        VM_IP=${{ inputs.vm_ip || secrets.HOST_IP }}
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@$VM_IP << EOF
          cd "${{ env.REPO_DIR_PATH}}"
          docker-compose -f docker-compose.envsubst.yaml down
          docker-compose -f docker-compose.envsubst.yaml up -d --build --force-recreate
        EOF